openapi: 3.0.3
info:
  title: Products service Demo
  description: Example service used to retrieve and store product information
  version: 3.0.0
tags:
  - name: products
    description: Product Controller
paths:
  /products:
    get:
      tags:
        - products
      summary: Method to retrieve a collection of products
      description: This method retrieves a collection of products by page, size and
        product name parameters
      operationId: obtainPagedProducts
      parameters:
        - name: firstPage
          in: query
          description: Requested page (first page is page 1). If not specified 1 is
            used. [Cannot be negative or zero]
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Number of retrieved elements per page. if not specified 10 is
            used. [Cannot be less than 1]
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
      security:
        - adfs: []
    post:
      tags:
        - products
      summary: Method to add one product to the data storage
      description: This method creates a new product with the given body information
      operationId: createProduct
      requestBody:
        description: productRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'

        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
      security:
        - adfs: []
  /products/{id}:
    get:
      tags:
        - products
      summary: Method to retrieve one product
      description: This method retrieves a product defined by a specific id
      operationId: obtainProduct
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
      security:
        - adfs: []
    put:
      tags:
        - products
      summary: Method to update a product from the data storage
      description: This method updates a product with the given id and body information
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ProductUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResource'
      security:
        - adfs: []
      x-codegen-request-body-name: productUpdateRequest
    delete:
      tags:
        - products
      summary: Method to delete a product from the data storage
      description: This method delete a product from the database with the given id
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResource'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResource'
        403:
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResource'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResource'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResource'
      security:
        - adfs: []
components:
  schemas:
    ErrorResource:
      title: ErrorResource
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        details:
          type: array
          items:
            type: string
    ProductRequest:
      title: ProductRequest
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 20
          minLength: 3
          type: string
        price:
          maximum: 5E+2
          minimum: 0
          type: number
        description:
          type: string
        email:
          type: string
          format: email
        expeditionDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        color:
          $ref: '#/components/schemas/ColorRequestEnum'
    ProductUpdateRequest:
      title: ProductUpdateRequest
      required:
        - color
        - description
        - email
        - expeditionDate
        - expirationDate
        - name
      type: object
      properties:
        name:
          maxLength: 20
          minLength: 3
          type: string
        price:
          maximum: 5E+2
          minimum: 0
          type: number
        description:
          type: string
        email:
          type: string
          format: email
        expeditionDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        color:
          $ref: '#/components/schemas/ColorRequestEnum'
    ProductCollectionRequest:
      title: ProductCollectionRequest
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductRequest'
    ProductResponse:
      readOnly: true
      title: ProductResponse
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
        email:
          type: string
          format: email
        expeditionDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        color:
          $ref: '#/components/schemas/ColorRequestEnum'

    ProductsResponse:
      title: ProductsResponse
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ColorRequestEnum:
      type: string
      enum:
        - black
        - white
        - red
        - green
        - blue
    ConditionRequestEnum:
      type: string
      enum:
        - new
        - refurbished
    Pagination:
      type: object
      properties:
        requestedPage:
          type: integer
          format: int32
        requestedSize:
          type: integer
          format: int32
        retrievedResults:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        nextPage:
          type: string
        previousPage:
          type: string
  securitySchemes:
    adfs:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: ""
          scopes: {}
